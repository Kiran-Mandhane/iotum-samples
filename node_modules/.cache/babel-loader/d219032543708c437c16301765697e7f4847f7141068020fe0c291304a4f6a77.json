{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst events_1 = require(\"events\");\nconst FramePermissionsPolicy = ['camera', 'microphone', 'autoplay', 'fullscreen', 'display-capture'].join(';');\nfunction createInstance(container, url, _ref) {\n  let {\n    target,\n    features\n  } = _ref;\n  if (container instanceof Window) {\n    return container.open(url, target, features);\n  }\n  const attached = document.body.contains(container);\n  if (!attached) {\n    // nothing will happen if the iframe is not attached to the document\n    document.body.appendChild(container);\n  }\n  const instance = document.createElement('iframe');\n  Object.assign(instance.style, Object.assign(Object.assign({}, getStyles(attached)), {\n    border: 'none',\n    width: '100%',\n    height: '100%'\n  }));\n  container.appendChild(Object.assign(instance, {\n    allow: FramePermissionsPolicy,\n    src: url\n  }));\n  return instance;\n}\nfunction getStyles(visible) {\n  return {\n    display: visible ? 'block' : 'none'\n  };\n}\nfunction setParams(url, params) {\n  for (const opt of Object.keys(params)) {\n    const val = params[opt];\n    if (val !== undefined && val !== null) {\n      url.searchParams.set(opt, String(val));\n    }\n  }\n  // Always enable events\n  url.searchParams.set('events', 'true');\n}\n/**\n * Callbridge Widget.\n */\nclass Widget {\n  constructor(_ref2) {\n    var _this = this;\n    let {\n      container,\n      domain,\n      sso,\n      target: {\n        name,\n        features\n      } = {}\n    } = _ref2;\n    let autoLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.emitter = new events_1.EventEmitter();\n    /** @internal */\n    this._container = null;\n    /** @internal */\n    this._instance = null;\n    /** @internal */\n    this._ready = false;\n    /** @internal */\n    this._load = params => {\n      if (!this._container || this._instance) {\n        return;\n      }\n      if (typeof params.redirect_url === 'string') {\n        // update params against redirect_url (instead of the iframe url)\n        const redirectUrl = new URL(params.redirect_url, this._url);\n        setParams(redirectUrl, Object.assign(Object.assign({}, params), {\n          redirect_url: null\n        }));\n        const isSSO = this._url.pathname === '/auth';\n        if (isSSO) {\n          setParams(this._url, {\n            redirect_url: `${redirectUrl.pathname}${redirectUrl.search}${redirectUrl.hash}`\n          });\n        } else {\n          this._url = redirectUrl;\n        }\n      } else {\n        setParams(this._url, params);\n      }\n      this._instance = createInstance(this._container, this._url.href, {\n        target: this._target,\n        features: this._features\n      });\n      if (this._instance) {\n        this._instance.onerror = ev => {\n          this._error = ev;\n          this.emit('widget.ERROR', ev instanceof Error ? ev.message : ev);\n        };\n      } else {\n        this.emit('widget.ERROR', 'Unable to open');\n      }\n    };\n    /** @internal */\n    this._processEvent = _ref3 => {\n      let {\n        data,\n        source\n      } = _ref3;\n      if (source === this.wnd) {\n        const {\n            type,\n            event\n          } = data,\n          extra = __rest(data, [\"type\", \"event\"]);\n        if (type && event) {\n          switch (event) {\n            case 'READY':\n              // the bi-di messaging channel is ready\n              this._ready = true;\n              this.emit('widget.LOAD');\n              break;\n            case 'UNLOAD':\n              this.unload();\n              this.emit('widget.UNLOAD');\n              break;\n            default:\n              break;\n          }\n          this.emit(`${type}.${event}`, extra);\n        }\n      }\n    };\n    /** @internal */\n    this._send = function (type, action) {\n      let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var _a;\n      (_a = _this.wnd) === null || _a === void 0 ? void 0 : _a.postMessage(Object.assign({\n        type,\n        action\n      }, data), '*');\n    };\n    if (container) {\n      if (typeof container === 'string') {\n        this._container = document.querySelector(container);\n      } else {\n        this._container = container;\n      }\n    }\n    if (!this._container) {\n      throw new Error('Unable to locate the container element');\n    }\n    this._url = new URL(`https://${domain}`);\n    if (sso) {\n      const {\n        hostId,\n        token\n      } = sso;\n      if (!hostId || !token) {\n        throw new Error('Missing SSO parameters');\n      }\n      this._url.pathname = '/auth';\n      this._url.searchParams.set('host_id', String(hostId));\n      this._url.searchParams.set('login_token_public_key', token);\n    }\n    window.addEventListener('message', this._processEvent);\n    this._target = name;\n    this._features = features;\n    if (autoLoad) {\n      this._load({\n        redirect_url: '/page_to_see'\n      });\n    }\n  }\n  /**\n   * Unloads the widget by removing the iframe or close the tab/window.\n   */\n  unload() {\n    var _a;\n    window.removeEventListener('message', this._processEvent);\n    if (this._instance) {\n      if (this._instance instanceof Element) {\n        if (this._instance.style.display === 'none') {\n          // detach from DOM\n          (_a = this._instance.parentElement) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._instance.remove();\n      } else {\n        this._instance.close();\n      }\n      this._instance = null;\n    }\n    this._ready = false;\n  }\n  /**\n   * Toggles the visibility of the widget on the page.\n   *\n   * Not available for pop-up.\n   *\n   * @param visible whether the widget should be visible\n   */\n  toggle(visible) {\n    if (this._instance instanceof HTMLElement) {\n      Object.assign(this._instance.style, getStyles(visible));\n    }\n  }\n  /**\n   * Whether the widget is ready.\n   */\n  get isReady() {\n    return this._ready;\n  }\n  /**\n   * The widget instance.\n   */\n  get instance() {\n    return this._instance;\n  }\n  /**\n   * The Window or WindowProxy instance of the widget.\n   */\n  get wnd() {\n    if (this._instance) {\n      return this._instance instanceof Element ? this._instance.contentWindow : this._instance;\n    }\n    return null;\n  }\n  /**\n   * Adds the `listener` function to the end of the listeners array for the event named `eventName`.\n   */\n  on(eventName, listener) {\n    this.emitter.on(eventName, listener);\n    return this;\n  }\n  /**\n   * Removes the specified `listener` from the listener array for the event named `eventName`.\n   */\n  off(eventName, listener) {\n    this.emitter.off(eventName, listener);\n    return this;\n  }\n  /**\n   * Adds a one-timelistener function for the event named eventName.\n   * The next time eventName is triggered, this listener is removed and then invoked.\n   */\n  once(eventName, listener) {\n    this.emitter.once(eventName, listener);\n    return this;\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event namedeventName,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns true if the event had listeners, false otherwise.\n   */\n  emit(eventName, data) {\n    return this.emitter.emit(eventName, data);\n  }\n  /**\n   * Removes all listeners, or those of the specified `eventName`.\n   *\n   * It is bad practice to remove listeners added elsewhere in the code,\n   * particularly when the instance was created by some other component or module.\n   */\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n}\nexports.default = Widget;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","events_1","require","FramePermissionsPolicy","join","createInstance","container","url","_ref","target","features","Window","open","attached","document","body","contains","appendChild","instance","createElement","assign","style","getStyles","border","width","height","allow","src","visible","display","setParams","params","opt","keys","val","undefined","searchParams","set","String","Widget","constructor","_ref2","_this","domain","sso","name","autoLoad","arguments","emitter","EventEmitter","_container","_instance","_ready","_load","redirect_url","redirectUrl","URL","_url","isSSO","pathname","search","hash","href","_target","_features","onerror","ev","_error","emit","Error","message","_processEvent","_ref3","data","source","wnd","type","event","extra","unload","_send","action","_a","postMessage","querySelector","hostId","token","window","addEventListener","removeEventListener","Element","parentElement","remove","close","toggle","HTMLElement","isReady","contentWindow","on","eventName","listener","off","once","removeAllListeners","default"],"sources":["/Users/katyabarbieri/webapp/iotum-samples/node_modules/@iotum/callbridge-js/dist/widget.js"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst FramePermissionsPolicy = [\n    'camera',\n    'microphone',\n    'autoplay',\n    'fullscreen',\n    'display-capture',\n].join(';');\nfunction createInstance(container, url, { target, features }) {\n    if (container instanceof Window) {\n        return container.open(url, target, features);\n    }\n    const attached = document.body.contains(container);\n    if (!attached) {\n        // nothing will happen if the iframe is not attached to the document\n        document.body.appendChild(container);\n    }\n    const instance = document.createElement('iframe');\n    Object.assign(instance.style, Object.assign(Object.assign({}, getStyles(attached)), { border: 'none', width: '100%', height: '100%' }));\n    container.appendChild(Object.assign(instance, {\n        allow: FramePermissionsPolicy,\n        src: url,\n    }));\n    return instance;\n}\nfunction getStyles(visible) {\n    return { display: visible ? 'block' : 'none' };\n}\nfunction setParams(url, params) {\n    for (const opt of Object.keys(params)) {\n        const val = params[opt];\n        if (val !== undefined && val !== null) {\n            url.searchParams.set(opt, String(val));\n        }\n    }\n    // Always enable events\n    url.searchParams.set('events', 'true');\n}\n/**\n * Callbridge Widget.\n */\nclass Widget {\n    constructor({ container, domain, sso, target: { name, features } = {} }, autoLoad = false) {\n        this.emitter = new events_1.EventEmitter();\n        /** @internal */\n        this._container = null;\n        /** @internal */\n        this._instance = null;\n        /** @internal */\n        this._ready = false;\n        /** @internal */\n        this._load = (params) => {\n            if (!this._container || this._instance) {\n                return;\n            }\n            if (typeof params.redirect_url === 'string') {\n                // update params against redirect_url (instead of the iframe url)\n                const redirectUrl = new URL(params.redirect_url, this._url);\n                setParams(redirectUrl, Object.assign(Object.assign({}, params), { redirect_url: null }));\n                const isSSO = this._url.pathname === '/auth';\n                if (isSSO) {\n                    setParams(this._url, {\n                        redirect_url: `${redirectUrl.pathname}${redirectUrl.search}${redirectUrl.hash}`,\n                    });\n                }\n                else {\n                    this._url = redirectUrl;\n                }\n            }\n            else {\n                setParams(this._url, params);\n            }\n            this._instance = createInstance(this._container, this._url.href, {\n                target: this._target,\n                features: this._features,\n            });\n            if (this._instance) {\n                this._instance.onerror = (ev) => {\n                    this._error = ev;\n                    this.emit('widget.ERROR', ev instanceof Error ? ev.message : ev);\n                };\n            }\n            else {\n                this.emit('widget.ERROR', 'Unable to open');\n            }\n        };\n        /** @internal */\n        this._processEvent = ({ data, source }) => {\n            if (source === this.wnd) {\n                const { type, event } = data, extra = __rest(data, [\"type\", \"event\"]);\n                if (type && event) {\n                    switch (event) {\n                        case 'READY':\n                            // the bi-di messaging channel is ready\n                            this._ready = true;\n                            this.emit('widget.LOAD');\n                            break;\n                        case 'UNLOAD':\n                            this.unload();\n                            this.emit('widget.UNLOAD');\n                            break;\n                        default:\n                            break;\n                    }\n                    this.emit(`${type}.${event}`, extra);\n                }\n            }\n        };\n        /** @internal */\n        this._send = (type, action, data = {}) => {\n            var _a;\n            (_a = this.wnd) === null || _a === void 0 ? void 0 : _a.postMessage(Object.assign({ type,\n                action }, data), '*');\n        };\n        if (container) {\n            if (typeof container === 'string') {\n                this._container = document.querySelector(container);\n            }\n            else {\n                this._container = container;\n            }\n        }\n        if (!this._container) {\n            throw new Error('Unable to locate the container element');\n        }\n        this._url = new URL(`https://${domain}`);\n        if (sso) {\n            const { hostId, token } = sso;\n            if (!hostId || !token) {\n                throw new Error('Missing SSO parameters');\n            }\n            this._url.pathname = '/auth';\n            this._url.searchParams.set('host_id', String(hostId));\n            this._url.searchParams.set('login_token_public_key', token);\n        }\n        window.addEventListener('message', this._processEvent);\n        this._target = name;\n        this._features = features;\n        if (autoLoad) {\n            this._load({ redirect_url: '/page_to_see' });\n        }\n    }\n    /**\n     * Unloads the widget by removing the iframe or close the tab/window.\n     */\n    unload() {\n        var _a;\n        window.removeEventListener('message', this._processEvent);\n        if (this._instance) {\n            if (this._instance instanceof Element) {\n                if (this._instance.style.display === 'none') {\n                    // detach from DOM\n                    (_a = this._instance.parentElement) === null || _a === void 0 ? void 0 : _a.remove();\n                }\n                this._instance.remove();\n            }\n            else {\n                this._instance.close();\n            }\n            this._instance = null;\n        }\n        this._ready = false;\n    }\n    /**\n     * Toggles the visibility of the widget on the page.\n     *\n     * Not available for pop-up.\n     *\n     * @param visible whether the widget should be visible\n     */\n    toggle(visible) {\n        if (this._instance instanceof HTMLElement) {\n            Object.assign(this._instance.style, getStyles(visible));\n        }\n    }\n    /**\n     * Whether the widget is ready.\n     */\n    get isReady() {\n        return this._ready;\n    }\n    /**\n     * The widget instance.\n     */\n    get instance() {\n        return this._instance;\n    }\n    /**\n     * The Window or WindowProxy instance of the widget.\n     */\n    get wnd() {\n        if (this._instance) {\n            return this._instance instanceof Element\n                ? this._instance.contentWindow\n                : this._instance;\n        }\n        return null;\n    }\n    /**\n     * Adds the `listener` function to the end of the listeners array for the event named `eventName`.\n     */\n    on(eventName, listener) {\n        this.emitter.on(eventName, listener);\n        return this;\n    }\n    /**\n     * Removes the specified `listener` from the listener array for the event named `eventName`.\n     */\n    off(eventName, listener) {\n        this.emitter.off(eventName, listener);\n        return this;\n    }\n    /**\n     * Adds a one-timelistener function for the event named eventName.\n     * The next time eventName is triggered, this listener is removed and then invoked.\n     */\n    once(eventName, listener) {\n        this.emitter.once(eventName, listener);\n        return this;\n    }\n    /**\n     * Synchronously calls each of the listeners registered for the event namedeventName,\n     * in the order they were registered, passing the supplied arguments to each.\n     * Returns true if the event had listeners, false otherwise.\n     */\n    emit(eventName, data) {\n        return this.emitter.emit(eventName, data);\n    }\n    /**\n     * Removes all listeners, or those of the specified `eventName`.\n     *\n     * It is bad practice to remove listeners added elsewhere in the code,\n     * particularly when the instance was created by some other component or module.\n     */\n    removeAllListeners(event) {\n        this.emitter.removeAllListeners(event);\n        return this;\n    }\n}\nexports.default = Widget;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}